{"version":3,"sources":["components/SearchBar.js","api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","value","onChange","e","setState","target","React","Component","axios","create","baseURL","headers","Authorization","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","alt","src","regular","ref","ImageList","images","map","components_ImageCard","key","id","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"yPAyBeA,6MAtBXC,MAAQ,CAAEC,KAAM,MAEhBC,aAAe,SAACC,GACZA,EAAMC,iBACNC,EAAKC,MAAMC,SAASF,EAAKL,MAAMC,+EAG1B,IAAAO,EAAAC,KACL,OAASC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACpBH,EAAAC,EAAAC,cAAA,QAAML,SAAUE,KAAKP,aAAcW,UAAU,WACzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACAE,KAAK,OACLC,MAAON,KAAKT,MAAMC,KAClBe,SAAU,SAACC,GAAD,OAAOT,EAAKU,SAAS,CAAEjB,KAAMgB,EAAEE,OAAOJ,qBAhB5CK,IAAMC,mBCAfC,WAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFC8BRC,qBAhCf,SAAAA,EAAYrB,GAAO,IAAAD,EAAA,OAAAuB,OAAAC,EAAA,EAAAD,CAAAnB,KAAAkB,IACftB,EAAAuB,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAvB,KAAMH,KASV2B,SAAW,WACP,IAAMC,EAAS7B,EAAK8B,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAO,IAE/B7B,EAAKa,SAAS,CAAEoB,WAbhBjC,EAAKL,MAAQ,CAAEsC,MAAO,GACtBjC,EAAK8B,SAAWf,IAAMqB,YAHPpC,mFAOfI,KAAK0B,SAASC,QAAQM,iBAAiB,OAAQjC,KAAKwB,2CAW3C,IAAAU,EACyBlC,KAAKH,MAAMsC,MAAjCC,EADHF,EACGE,YAAaC,EADhBH,EACgBG,KACrB,OACIpC,EAAAC,EAAAC,cAAA,OAAKmC,MAAO,CAAEC,WAAU,QAAAC,OAAUxC,KAAKT,MAAMsC,SACzC5B,EAAAC,EAAAC,cAAA,OACIsC,IAAKL,EACLM,IAAKL,EAAKM,QACVC,IAAK5C,KAAK0B,mBA1BNf,IAAMC,YCafiC,EAXG,SAAChD,GACf,IAAMiD,EAASjD,EAAMiD,OAAOC,IAAI,SAACZ,GAC7B,OACAlC,EAAAC,EAAAC,cAAC6C,EAAD,CAAWC,IAAKd,EAAMe,GAAIf,MAAOA,MAGrC,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc0C,ICgBtBK,6MApBX5D,MAAQ,CAAEuD,OAAQ,MAElBM,qDAAiB,SAAAC,EAAO7D,GAAP,IAAA8D,EAAA,OAAAC,EAAArD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUC,EAASC,IAAI,gBAAiB,CACjDC,OAAQ,CAAEC,MAAOvE,KAFR,OACP8D,EADOG,EAAAO,KAKbpE,EAAKa,SAAS,CAAEqC,OAAQQ,EAASW,KAAKC,UALzB,wBAAAT,EAAAU,SAAAd,oIASb,OAAQpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAekC,MAAO,CAAE8B,UAAW,SACtDnE,EAAAC,EAAAC,cAACkE,EAAD,CAAWvE,SAAUE,KAAKoD,iBAC1BnD,EAAAC,EAAAC,cAACmE,EAAD,CAAWxB,OAAQ9C,KAAKT,MAAMuD,iBAdxBnC,IAAMC,WCFxB2D,IAASC,OAAOvE,EAAAC,EAAAC,cAACsE,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.c431793f.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = { term: '' };\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit(this.state.term);\n    };\n\n    render() { \n        return ( <div className=\"ui segment\">\n            <form onSubmit={this.onFormSubmit} className='ui form'>\n                <div className=\"field\">\n                    <label>Image Search: </label>\n                    <input  \n                    type='text' \n                    value={this.state.term} \n                    onChange={(e) => this.setState({ term: e.target.value })} />\n                </div>\n            </form>\n        </div> );\n    };\n}\n \nexport default SearchBar;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID 76393677b35cc6dd164002dbea39838f683fe8098172124d2bc6caaba1a43958'\n    }\n});\n\n","import React from 'react';\n\nclass ImageCard extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = { spans: 0 }\n    this.imageRef = React.createRef();\n}\n\ncomponentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n}\n\nsetSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height/10);\n\n    this.setState({ spans });\n}\n\n    render() { \n        const { description, urls } = this.props.image;\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n                <img \n                    alt={description}\n                    src={urls.regular}\n                    ref={this.imageRef}\n                />\n            </div>\n          );\n    }\n}\n \nexport default ImageCard;","import './ImageList.css';\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\nconst ImageList = (props) => {\n    const images = props.images.map((image) => {\n        return (\n        <ImageCard key={image.id} image={image}/>\n        )\n    });\n    return ( \n        <div className=\"image-list\">{images}</div>\n         );\n}\n \nexport default ImageList;","import React from 'react';\nimport SearchBar from './SearchBar';\nimport unsplash from '../api/unsplash';\nimport ImageList from './ImageList';\n\n \nclass App extends React.Component {\n    state = { images: [] };\n\n    onSearchSubmit = async (term) => {\n        const response = await unsplash.get('search/photos', {\n            params: { query: term },\n        });\n\n        this.setState({ images: response.data.results });\n    }\n\n    render(){\n        return (<div className=\"ui container\" style={{ marginTop: '10px' }}>\n            <SearchBar onSubmit={this.onSearchSubmit} />\n            <ImageList images={this.state.images} />\n        </div>\n        );\n    }\n    \n}\n \nexport default App;\n\n// splash api key 76393677b35cc6dd164002dbea39838f683fe8098172124d2bc6caaba1a43958","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}